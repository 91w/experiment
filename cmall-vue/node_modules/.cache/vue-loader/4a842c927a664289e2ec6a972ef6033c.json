{"remainingRequest":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myShop\\cmall-vue\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"D:\\myShop\\cmall-vue\\src\\views\\Login.vue","mtime":1714192313816},{"path":"D:\\myShop\\cmall-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1714004800405},{"path":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1714004801776},{"path":"D:\\myShop\\cmall-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1714004800978},{"path":"D:\\myShop\\cmall-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714004799971},{"path":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1714004801336}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICcuLi9hc3NldHMvY3NzL2J1dHRvbi5jc3MnOw0KLnRleHQgew0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCi5pdGVtIHsNCiAgbWFyZ2luOiAwIGF1dG87DQogIHdpZHRoOiAzMDBweDsNCn0NCg0KLmNsZWFyZml4IHsNCiAgZm9udC1zaXplOiAyMHB4Ow0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQouYm94LWNhcmQgew0KICBtYXJnaW46IDAgYXV0bzsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB3aWR0aDogNDAwcHg7DQogIG1hcmdpbi10b3A6IDEwMHB4Ow0KICBtYXJnaW4tYm90dG9tOiAzMDBweDsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCn0NCi5ib3gtY2FyZCAubGluZSB7DQogIGhlaWdodDogMzBweDsNCiAgd2lkdGg6IDMwMHB4Ow0KICBtYXJnaW46IDAgYXV0bzsNCiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjMGMwYzA7DQp9DQovKuWFtuS7lui0puWPt+eZu+W9lSovDQouYm94LWNhcmQgLmxvZ28gew0KICB3aWR0aDogMzAwcHg7DQogIG1hcmdpbjogMCBhdXRvOw0KICBoZWlnaHQ6IDMwcHg7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQp9DQouYm94LWNhcmQgLmxvZ28gLmxvZ28taW5mbyB7DQogIGZvbnQtc2l6ZTogMTRweDsNCiAgY29sb3I6ICM3NTc1NzU7DQp9DQouYm94LWNhcmQgLmxvZ28gLmxvZ28tbG9naW4gew0KICBoZWlnaHQ6IDE1cHg7DQogIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KfQ0KLyrlhbbku5botKblj7fnmbvlvZVFTkQqLw0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAoJA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<!--\r\n * @Descripttion: 登录页面组件\r\n * @Author: congz\r\n * @Date: 2020-06-11 11:08:34\r\n * @LastEditors: congz\r\n * @LastEditTime: 2020-08-19 10:14:30\r\n--> \r\n\r\n<template>\r\n  <div class=\"login\">\r\n    <div>\r\n      <el-card class=\"box-card\" shadow=\"hover\">\r\n        <router-link to=\"/\">\r\n          <img src=\"../assets/imgs/clogo.png\" alt />\r\n        </router-link>\r\n        <div class=\"clearfix\">\r\n          <span>欢迎回来</span>\r\n        </div>\r\n        <div class=\"item\">\r\n          <el-form :model=\"form\" status-icon :rules=\"rules\" ref=\"form\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input v-model=\"form.username\" placeholder=\"用户名/手机号\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item >\r\n              <el-input type=\"password\" v-model=\"form.password\" placeholder=\"密码\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"captcha\"> \r\n              <el-input v-model=\"form.captcha\" placeholder=\"验证码\"></el-input>\r\n            </el-form-item>\r\n            <div>\r\n              <img src=\"\" id=\"codeImg\" @click=\"refreshCaptcha()\">\r\n              <button type=\"button\" @click=\"refreshCaptcha()\">看不清楚？</button>\r\n            </div>\r\n          </el-form>\r\n          <div style=\"margin-top:15px\">\r\n            <a href=\"javascript:;\" class=\"btn-gradient blue block\" @click=\"login('form')\">登录</a>\r\n          </div>\r\n          <el-link\r\n            type=\"primary\"\r\n            href=\"/#/register\"\r\n            style=\"float:right;margin-bottom:10px;\"\r\n          >没有账号？请先注册></el-link>\r\n        </div>\r\n        <div class=\"line\"></div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script src=\"../assets/gt.js\"></script>\r\n<script>\r\nimport { mapActions } from 'vuex'\r\nimport * as userAPI from '@/api/users'\r\nrequire('../assets/gt.js')\r\nvar captcha\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    var validateUser = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('请输入用户名'))\r\n      } \r\n      callback()\r\n    }\r\n    var validateCode = (rule, value, callback) => {\r\n      value = value.trim().toLowerCase()\r\n      var expectCode = this.captchaCode.trim().toLowerCase()\r\n      if(value === '') {\r\n        callback(new Error('请输入验证码'))\r\n      } else if(value !== expectCode) {\r\n        callback(new Error('验证码错误'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        captcha: '',\r\n      },\r\n      captchaSrc: '',\r\n      captchaCode: '',\r\n      rules: {\r\n        username: [{ validator: validateUser, trigger: 'blur' }],\r\n        captcha: [{ validator: validateCode, trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['setUser']),\r\n    refreshCaptcha() {\r\n      // 获取验证码\r\n      userAPI.getCode()\r\n        .then(res => {\r\n          // 假设后端返回的是一个带有验证码key的图片\r\n          this.captchaCode = res.data.code;\r\n          // 创建一个URL对象表示指向由参数创建的Blob对象\r\n          this.captchaSrc = res.data.img;\r\n          document.getElementById('codeImg').src = \"data:image/png;base64,\" + this.captchaSrc;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching captcha image:', error);\r\n        });\r\n    }, \r\n\r\n    login(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (!valid) {\r\n          return\r\n        }\r\n          userAPI\r\n            .postLogin(this.form)\r\n            .then(res => {\r\n              console.log(res)\r\n              if (res.status === 404) {\r\n                this.notifyError('验证失败', res.data.msg)\r\n              } else if (res.data.msg == \"成功\") {\r\n                // 登录信息存到本地\r\n                let user = JSON.stringify(res.data.user)\r\n                localStorage.setItem('user', user)\r\n                localStorage.setItem('token', res.data.token)\r\n                // 登录信息存到vuex\r\n                this.setUser(res.user)\r\n                // 弹出通知框提示登录成功信息\r\n                this.notifySucceed('登录成功')\r\n                this.$router.push({\r\n                  name: 'Home'\r\n                })\r\n              } else {\r\n                console.log(res.data.msg)\r\n                this.notifyError('登录失败', res.data.msg)\r\n              }\r\n            })\r\n            .catch(error => {\r\n              this.notifyError('登录失败', error)\r\n            })\r\n      })\r\n    },\r\n  },\r\n  mounted() {\r\n    this.refreshCaptcha()\r\n  },\r\n\r\n  components: {}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/css/button.css';\r\n.text {\r\n  font-size: 14px;\r\n}\r\n\r\n.item {\r\n  margin: 0 auto;\r\n  width: 300px;\r\n}\r\n\r\n.clearfix {\r\n  font-size: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.box-card {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 400px;\r\n  margin-top: 100px;\r\n  margin-bottom: 300px;\r\n  border-radius: 10px;\r\n}\r\n.box-card .line {\r\n  height: 30px;\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  border-bottom: 1px solid #c0c0c0;\r\n}\r\n/*其他账号登录*/\r\n.box-card .logo {\r\n  width: 300px;\r\n  margin: 0 auto;\r\n  height: 30px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.box-card .logo .logo-info {\r\n  font-size: 14px;\r\n  color: #757575;\r\n}\r\n.box-card .logo .logo-login {\r\n  height: 15px;\r\n  margin-left: 10px;\r\n}\r\n/*其他账号登录END*/\r\n</style>\r\n"]}]}