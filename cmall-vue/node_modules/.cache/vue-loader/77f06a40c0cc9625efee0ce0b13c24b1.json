{"remainingRequest":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myShop\\cmall-vue\\src\\views\\Register.vue?vue&type=style&index=0&id=63ae9146&scoped=true&lang=css","dependencies":[{"path":"D:\\myShop\\cmall-vue\\src\\views\\Register.vue","mtime":1714203498856},{"path":"D:\\myShop\\cmall-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1714004800405},{"path":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1714004801776},{"path":"D:\\myShop\\cmall-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1714004800978},{"path":"D:\\myShop\\cmall-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714004799971},{"path":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1714004801336}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICcuLi9hc3NldHMvY3NzL2J1dHRvbi5jc3MnOw0KLnRleHQgew0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCi5pdGVtIHsNCiAgbWFyZ2luOiAwIGF1dG87DQogIHdpZHRoOiAzMDBweDsNCn0NCg0KLmNsZWFyZml4IHsNCiAgZm9udC1zaXplOiAyMHB4Ow0KfQ0KDQouYm94LWNhcmQgew0KICBtYXJnaW46IDAgYXV0bzsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICB3aWR0aDogNDAwcHg7DQogIG1hcmdpbi10b3A6IDEwMHB4Ow0KICBtYXJnaW4tYm90dG9tOiAyMDBweDsNCiAgYm9yZGVyLXJhZGl1czogMTBweDsNCn0NCg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";AA+LA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<!--\r\n * @Descripttion: 注册页面组件\r\n * @Author: congz\r\n * @Date: 2020-06-11 10:01:19\r\n * @LastEditors: congz\r\n * @LastEditTime: 2020-08-18 19:58:16\r\n--> \r\n\r\n<template>\r\n  <div class=\"register\">\r\n    <div>\r\n      <el-card class=\"box-card\" shadow=\"hover\">\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>注册</span>\r\n        </div>\r\n        <div class=\"item\">\r\n          <el-form :model=\"form\" status-icon :rules=\"rules\" ref=\"form\">\r\n            <el-form-item prop=\"username\">\r\n              <el-input v-model=\"form.username\" placeholder=\"用户名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"phone\">\r\n              <el-input v-model=\"form.phone\" placeholder=\"手机号\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"email\">\r\n              <el-input v-model=\"form.email\" placeholder=\"邮箱\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password\">\r\n              <el-input v-model=\"form.password\" placeholder=\"密码\" type=\"password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"password_confirm\">\r\n              <el-input v-model=\"form.password_confirm\" placeholder=\"确认密码\" type=\"password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item prop=\"captcha\">\r\n              <el-input  v-model=\"form.captcha\" placeholder=\"验证码\"></el-input>\r\n            </el-form-item>\r\n            <div>\r\n              <img src=\"\" id=\"codeImg\" @click=\"refreshCaptcha()\">\r\n              <button type=\"button\" @click=\"refreshCaptcha()\">看不清楚？</button>\r\n            </div>\r\n          </el-form>\r\n          <div style=\"margin-top:15px\">\r\n            <a href=\"javascript:;\" class=\"btn-gradient blue block\" @click=\"register('form')\">注册</a>\r\n          </div>\r\n          <el-link type=\"primary\" href=\"/#/login\" style=\"float:right;margin-bottom:20px;\">已有账号？直接登录></el-link>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script src=\"../assets/gt.js\"></script>\r\n<script>\r\nimport * as userAPI from '@/api/users'\r\nrequire('../assets/gt.js')\r\nvar captcha\r\nexport default {\r\n  name: 'Register',\r\n  data() {\r\n    var validateUser = (rule, value, callback) => {\r\n      if (value === '' || value === null) {\r\n        callback(new Error('用户名不能为空'))\r\n      } \r\n      callback()\r\n    }\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === '' || value === null) {\r\n        callback(new Error('请输入密码'))\r\n      } else if (value.length < 8 || value.length > 16) {\r\n        callback(new Error('密码长度需在8到16之间'))\r\n      } else {\r\n        if (this.form.password_confirm !== '') {\r\n          this.$refs.form.validateField('checkPass')\r\n        } \r\n        callback()\r\n      }\r\n    }\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === '' || value === null) {\r\n        callback(new Error('请再次输入密码'))\r\n      } else if (value !== this.form.password) {\r\n        callback(new Error('两次输入密码不一致!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    var validatePhone = (rule, value, callback) => {\r\n      if (value === '' || value === null) {\r\n        callback(new Error('手机号不能为空'))\r\n      } else {\r\n        // 编写正则表达式，验证中国大陆的手机号\r\n        const phoneRegex = /^1[3-9]\\d{9}$/;\r\n        if (!phoneRegex.test(value)) {\r\n        callback(new Error('请输入有效的手机号'));\r\n        }  \r\n      }\r\n      callback()\r\n    }\r\n    var validateEmail = (rule, value, callback) => {\r\n      if (value === '' || value === null) {\r\n        callback(new Error('邮箱不能为空'));\r\n      } else {\r\n        // 正则表达式验证邮箱\r\n        const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n        if (!emailRegex.test(value)) {\r\n          callback(new Error('请输入有效的邮箱地址'));\r\n        } else {\r\n          callback();\r\n        }\r\n      }\r\n    }\r\n    var validateCode = (rule, value, callback) => {\r\n      if(value === '') {\r\n        callback(new Error('请输入验证码'))\r\n      } else if(value !== this.captchaCode) {\r\n        callback(new Error('验证码错误'))\r\n      }\r\n      callback()\r\n    }\r\n    return {\r\n      imageUrl: '',\r\n      form: {\r\n        username: '',\r\n        password: '',\r\n        password_confirm: '',\r\n        phone: '',\r\n        email: '',\r\n        captcha: '',\r\n      },\r\n      rules: {\r\n        username: [{ validator: validateUser, trigger: 'blur' }],\r\n        password: [{ validator: validatePass, trigger: 'blur' }],\r\n        password_confirm: [{ validator: validatePass2, trigger: 'blur' }],\r\n        phone: [{ validator: validatePhone, trigger: 'blur' }],\r\n        email: [{ validator: validateEmail, trigger: 'blur' }],\r\n        captcha: [{ validator: validateCode, trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    register(formName) {\r\n      console.log(\"执行\")\r\n      this.$refs[formName].validate(valid => {\r\n        console.log(\"验证结果为:\", valid)\r\n        if (!valid) {\r\n          console.log(\"表单出错\")\r\n          return\r\n        }\r\n        console.log(\"执行1\")\r\n          userAPI\r\n          console.log(\"执行2\")\r\n            .postUser(this.form)\r\n            .then(res => {\r\n              console.log(res)\r\n              if (res.status === 404) {\r\n                this.notifyError('验证失败', res.msg)\r\n              } else if (res.data.msg === \"成功\") {\r\n                this.notifySucceed('注册成功')\r\n                this.$router.push({\r\n                  name: 'Login'\r\n                })\r\n              } else {\r\n                this.notifyError('注册失败', res.data.msg)\r\n              }\r\n            })\r\n            .catch(error => {\r\n              this.notifyError('注册失败', error)\r\n            })\r\n      })\r\n    },\r\n    refreshCaptcha() {\r\n      // 获取验证码\r\n      userAPI.getCode()\r\n        .then(res => {\r\n          // 假设后端返回的是一个带有验证码key的图片\r\n          this.captchaCode = res.data.code;\r\n          // 创建一个URL对象表示指向由参数创建的Blob对象\r\n          this.captchaSrc = res.data.img;\r\n          document.getElementById('codeImg').src = \"data:image/png;base64,\" + this.captchaSrc;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching captcha image:', error);\r\n        });\r\n    }, \r\n  },\r\n  mounted() {\r\n    this.refreshCaptcha()\r\n  },\r\n  components: {}\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import '../assets/css/button.css';\r\n.text {\r\n  font-size: 14px;\r\n}\r\n\r\n.item {\r\n  margin: 0 auto;\r\n  width: 300px;\r\n}\r\n\r\n.clearfix {\r\n  font-size: 20px;\r\n}\r\n\r\n.box-card {\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 400px;\r\n  margin-top: 100px;\r\n  margin-bottom: 200px;\r\n  border-radius: 10px;\r\n}\r\n</style>\r\n"]}]}