{"remainingRequest":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\myShop\\cmall-vue\\src\\views\\Service.vue?vue&type=style&index=0&id=1b0ebaeb&scoped=true&lang=css","dependencies":[{"path":"D:\\myShop\\cmall-vue\\src\\views\\Service.vue","mtime":1714695998478},{"path":"D:\\myShop\\cmall-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1714004800405},{"path":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1714004801776},{"path":"D:\\myShop\\cmall-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1714004800978},{"path":"D:\\myShop\\cmall-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1714004799971},{"path":"D:\\myShop\\cmall-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1714004801336}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2hhdC1jb250YWluZXIgew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICBoZWlnaHQ6IDEwMHZoOw0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgfQ0KICANCiAgLmNoYXQtaGlzdG9yeSB7DQogICAgb3ZlcmZsb3cteTogYXV0bzsNCiAgICBwYWRkaW5nOiAxMHB4Ow0KICAgIGhlaWdodDogOTAlOw0KICB9DQogIA0KICAuaW5wdXQtYXJlYSB7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIHRvcDogMjAlOw0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgcGFkZGluZzogMTBweDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICB9DQogIA0KICAuaW5wdXQtZmllbGQgew0KICAgIGZsZXgtZ3JvdzogMTsNCiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQogIH0NCiAgDQogIC5zdWJtaXQtYnRuIHsNCiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7DQogIH0NCg=="},{"version":3,"sources":["Service.vue"],"names":[],"mappings":";AAyFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Service.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"common-layout\">\r\n        <el-container>\r\n          <el-header>\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"12\" :offset=\"6\">\r\n                  <h2>官方客服，有什么需要直接询问</h2>\r\n                </el-col>\r\n            </el-row>\r\n          </el-header>    \r\n            <div class=\"chat-container\">\r\n                <div class=\"chat-history\" style=\"height: 500px; overflow-y: auto\">\r\n                    <ul v-infinite-scroll  class=\"infinite-list\" style=\"overflow: auto\">\r\n                        <li v-for=\"(item, index) in history\" :key=\"index\" class=\"infinite-list-item\">\r\n                          <el-divider />\r\n                          <el-avatar src=\"https://cube.elemecdn.com/0/88/03b0d39583f48206768a7534e55bcpng.png\" size=\"40\"></el-avatar>\r\n                          <span>{{ item.usercontent }}</span>\r\n                          <el-divider />\r\n                          <span>{{ item.servicecontent }}</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"input-area\" >\r\n                    <el-input \r\n                        v-model=\"question\" \r\n                        placeholder=\"请输入问题\" \r\n                        class=\"input-field\" :rows=\"2\"\r\n                        type=\"textarea\"\r\n                        autosize/>\r\n                    <el-button @click=\"fetchAnswer(question)\" type=\"primary\" class=\"sumbit-btn\">提交</el-button>\r\n                </div>\r\n            </div>  \r\n            \r\n        </el-container>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport * as chatAPI from '@/api/chat'\r\nexport default {\r\n  data() {\r\n    return { \r\n      question: '',\r\n      history: '',\r\n      answer: '',\r\n      loading: false,\r\n      noMore: false,\r\n      count: 0,\r\n      userid: JSON.parse(localStorage.getItem('user')).id\r\n    };\r\n  },\r\n  activated() {\r\n    // 获取首页数据\r\n    this.getHistory()\r\n  },\r\n  methods: {\r\n    getHistory() {\r\n      // 获取历史数据\r\n      chatAPI\r\n        .listHistory()\r\n        .then(res => {\r\n          if (res.msg === '成功') {\r\n            this.history = res.data\r\n          }  else {\r\n            this.notifyError('获取历史记录失败', res.msg)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.notifyError('获取历史记录失败1', err)\r\n        })\r\n    },\r\n    fetchAnswer(question) {\r\n      chatAPI\r\n        .postChat(question)\r\n        .then(res => {\r\n            console.log(\"问\", res)\r\n            this.answer = res.answer\r\n            this.history.push({\r\n                usercontent: question,\r\n                servicecontent: res.answer\r\n            });\r\n            this.question = ''; // 清空输入框\r\n        })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .chat-history {\r\n    overflow-y: auto;\r\n    padding: 10px;\r\n    height: 90%;\r\n  }\r\n  \r\n  .input-area {\r\n    position: relative;\r\n    top: 20%;\r\n    justify-content: center;\r\n    display: flex;\r\n    padding: 10px;\r\n    align-items: center;\r\n  }\r\n  \r\n  .input-field {\r\n    flex-grow: 1;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  .submit-btn {\r\n    padding: 10px 20px;\r\n  }\r\n</style>\r\n\r\n "]}]}